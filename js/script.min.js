var game=function(){var stage,treat,points,width=10,snake=[],dir,queue,loading,dead;window.onkeydown=checkKey;init();function checkKey(e){switch(e.keyCode){case 32:reset();break;case 37:dir='left';break;case 38:dir='up';break;case 39:dir='right';break;case 40:dir='down';break}}
function init(){stage=new createjs.Stage('myCanvas');loading=new createjs.Text("Loading","30px Helvetica","#fff");loading.textBaseline="middle";loading.textAlign="center";loading.x=stage.canvas.width/2;loading.y=stage.canvas.height/2;stage.addChild(loading);queue=new createjs.LoadQueue(!0);queue.installPlugin(createjs.Sound);queue.on("progress",progress);queue.on('complete',createStart);queue.loadManifest([{id:"treat",src:"sound/treat.mp3"},{id:"dead",src:"sound/dead.mp3"}])}
function progress(e){var percent=Math.round(e.progress*100);loading.text="Loading: "+percent+"%";stage.update()}
function createStart(){stage.removeChild(dead);stage.removeChild(loading);createjs.Ticker.addEventListener('tick',onTick);createjs.Ticker.setFPS(30);var head=new createjs.Shape();head.graphics.beginFill('#09f');head.graphics.drawRect(0,0,width,width);head.x=0;head.y=0;dir='right';snake.push(head);stage.addChild(head);treat=new createjs.Shape();treat.graphics.beginFill('#f00');treat.graphics.drawRect(0,0,width,width);newTreat();stage.addChild(treat);points=0;document.getElementById('points').innerText='Points: '+points}
function newTreat(){treat.x=Math.floor(Math.random()*(stage.canvas.width-width)*width)/width;treat.y=Math.floor(Math.random()*(stage.canvas.height-width)*width)/width}
function onTick(e){if(!e.paused){if(snake.length>0)moveSnake();snake.forEach((e,i)=>{if(i>0&&checkIntersection(snake[0],e))end()});if(checkIntersection(snake[0],treat)){createjs.Sound.play("treat");addToSnake();newTreat();points++;document.getElementById('points').innerText='Points: '+points}
stage.update(e)}}
function end(){stage.removeAllChildren();createjs.Ticker.paused=!0;createjs.Sound.play("dead");dead=new createjs.Text("You are dead. press spacebar to start a new game","20px Helvetica","#fff");dead.textBaseline="middle";dead.textAlign="center";dead.x=stage.canvas.width/2;dead.y=stage.canvas.height/2;stage.addChild(dead)}
function reset(){stage.removeAllChildren();snake=[];createjs.Ticker.paused=!1;createStart()}
function moveElem(e){switch(e.dir){case 'left':e.x>0?e.x-=width:e.x=stage.canvas.width-width;break;case 'up':e.y>0?e.y-=width:e.y=stage.canvas.height-width;break;case 'right':e.x<(stage.canvas.width-width)?e.x+=width:e.x=0;break;case 'down':e.y<(stage.canvas.width-width)?e.y+=width:e.y=0;break}}
function moveSnake(){snake.reverse().forEach((e,i)=>{if(i==snake.length-1){e.dir=dir}
else e.dir=snake[i+1].dir;moveElem(e)});snake.reverse()}
function addToSnake(){tailElement=new createjs.Shape();tailElement.graphics.beginFill('#fff');tailElement.graphics.drawRect(0,0,width,width);lastElem=snake[snake.length-1];tailElement.dir=lastElem.dir;switch(lastElem.dir){case 'left':tailElement.x=lastElem.x+width;tailElement.y=lastElem.y;break;case 'up':tailElement.x=lastElem.x;tailElement.y=lastElem.y+width;break;case 'right':tailElement.x=lastElem.x-width;tailElement.y=lastElem.y;break;case 'down':tailElement.x=lastElem.x;tailElement.y=lastElem.y-width;break}
snake.push(tailElement);stage.addChild(tailElement)}
function checkIntersection(rect1,rect2){if(rect1.x>=rect2.x+width||rect1.x+width<=rect2.x||rect1.y>=rect2.y+width||rect1.y+width<=rect2.y)return!1;return!0}}
window.addEventListener('load',game)